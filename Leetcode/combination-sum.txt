import java.util.*;

public class Solution {
    public ArrayList<ArrayList<Integer>> combinationSum(int[] candidates, int target) {
        ArrayList<ArrayList<Integer>> res = new ArrayList<>();
        if(candidates.length==0)
            return res;
        Arrays.sort(candidates);
        ArrayList<Integer> item = new ArrayList<Integer>();
        helper(candidates,0,target, item, res);
        return res;
    }

    private static void helper(int[] candidates, int start, int target, ArrayList<Integer> item,
                        ArrayList<ArrayList<Integer>> res)
    {
        if(target==0){
            res.add(new ArrayList<Integer>(item));
            return;
        }
        if(target<0){
            return;
        }
        for(int i=start;i<candidates.length;i++){
            item.add(candidates[i]);
            helper(candidates,i,target-candidates[i],item,res);
            item.remove(item.size()-1);
        }
    }
}