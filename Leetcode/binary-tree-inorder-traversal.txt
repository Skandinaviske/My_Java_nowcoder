import java.util.*;
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<Integer> inorderTraversal(TreeNode root) {

        ArrayList<Integer> result = new ArrayList<Integer>();

        if(root ==null) return result;
        Stack<TreeNode> stack = new Stack<TreeNode>();

        TreeNode p = root;

        stack.push(p);
        while(!stack.isEmpty()){

            while(p.left!=null){
                stack.push(p.left);
                p = p.left;
            }

                    if(!stack.isEmpty()) {
                        TreeNode temTreeNode = stack.pop();
                        if (temTreeNode.right != null) {
                            stack.push(temTreeNode.right);
                            p=temTreeNode.right;
                }
                result.add(temTreeNode.val);
                //Thread.sleep(1000);
            }
        }
        //AG

        return result;
    }
}