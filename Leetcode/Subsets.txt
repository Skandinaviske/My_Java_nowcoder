import java.util.*;

public class Solution {
        public static ArrayList<ArrayList<Integer>> subsets(int[] S) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if(S.length==0)
            return result;
        ArrayList<Integer> tem = new ArrayList<Integer>();
        //boolean[] boolGroup = new boolean[S.length];
        DFSs(0,S,result,tem);
        return result;
    }

    public static void DFSs(int index, int[] S, ArrayList<ArrayList<Integer>> result, ArrayList<Integer> tem){
        result.add(new ArrayList<>(tem));
        for(int i = index;i<S.length;i++){
                tem.add(S[i]);
                DFSs(i + 1, S, result, tem);
                tem.remove(tem.size() - 1);
        }
    }
}
