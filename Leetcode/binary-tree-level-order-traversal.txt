/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.*;
public class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode root)  {
        {
            ArrayList result = new ArrayList();
            if(root==null)
            {
                return result;
            }
            Queue queue = new LinkedList<TreeNode>();
            queue.offer(root);
            while(!queue.isEmpty()) {
                ArrayList<Integer> temArr = new ArrayList<Integer>();
                int sum = queue.size();
                int i = 0;
                while (i < sum) {
                    TreeNode treeNode = (TreeNode) queue.poll();
                    //temArr.add(treeNode.val);
                    if (treeNode.left != null) {
                        queue.add(treeNode.left);
                    }
                    if (treeNode.right != null) {
                        queue.add(treeNode.right);
                    }
                    temArr.add(treeNode.val);
                    i++;
                }
                result.add(temArr);
            }
            return result;
        }
    }
}