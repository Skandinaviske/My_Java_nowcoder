/*
 public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}
*/
import java.util.*;

public class Solution {

    public ListNode EntryNodeOfLoop(ListNode pHead)
        {
        Map newMap = new HashMap();
        ListNode p = pHead;
        int i = 0;
        while(p!=null){
            if(newMap.containsValue(p)){
                return p;
            }
            newMap.put(i,p);
            i++;
        p=p.next;
        }
        return null;
    }
}

//首先使用快慢指针进入环内，确定是否有环，若有环，则确定环内节点的个数

//知道个数后定义两个指针，第一个先走Ｎ步（步数等于换内节点的个数），另一个节点从头节点开始

//他们再次相遇的节点即入口
