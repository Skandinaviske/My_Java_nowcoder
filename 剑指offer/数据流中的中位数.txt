import java.util.*;
public class Solution {

    PriorityQueue<Integer> rHeap = new PriorityQueue<Integer>();
    PriorityQueue<Integer> lHeap = new PriorityQueue<Integer>(15,new Comparator<Integer>() {
        public int compare(Integer o1, Integer o2) {
            return o2 - o1;
        }
    });
    
public void Insert(Integer num) {
        if(lHeap.isEmpty()||num<lHeap.peek()){
            lHeap.offer(num);
        }
        else{
            rHeap.offer(num);
        }

        if(rHeap.size()>lHeap.size()){
            lHeap.offer(rHeap.peek());
            rHeap.poll();
        }else if(lHeap.size()-rHeap.size()==2){
            rHeap.offer(lHeap.peek());
            lHeap.poll();
        }

    }

    public Double GetMedian() {
        if((lHeap.size()+rHeap.size())%2==0){
            return new Double(lHeap.peek()+rHeap.peek())/2;
        }else
            return new Double(lHeap.peek());
    }


}