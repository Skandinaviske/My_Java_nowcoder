class singleton{
	
	private static singleton instance = null;
	private singleton(){};
	public static singleton getInstance()
	{
		if(instance == null){
			instance = new singleton();
		}
		return instance;
	}
}
//懒汉式

class singleton{
	
	private static singleton instance = null;
	private singleton(){};
	public static singleton getInstance()
	{
	    if(instance == null){
		synchronized (singleton.class) {
			if(instance == null){
				instance = new singleton();
			}
	    	}
	}
	return instance;
	}
}
//锁对象使懒汉式线程安全

class singleton{
	
	private static singleton instance = new singleton();
	private singleton(){};
	public static singleton getInstance()
	{
		return instance;
	}
}